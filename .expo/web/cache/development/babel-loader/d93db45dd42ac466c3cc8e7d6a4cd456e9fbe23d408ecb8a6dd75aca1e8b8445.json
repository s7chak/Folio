{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.DEFAULT_X_LABELS_HEIGHT_PERCENTAGE = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNativeSvg = require(\"react-native-svg\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"/Users/subhayuchakravarty/MyPy/LocalApps/AppFronts/Folio/node_modules/react-native-chart-kit/dist/AbstractChart.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n};\nvar DEFAULT_X_LABELS_HEIGHT_PERCENTAGE = 0.75;\nexports.DEFAULT_X_LABELS_HEIGHT_PERCENTAGE = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE;\nvar AbstractChart = function (_super) {\n  __extends(AbstractChart, _super);\n  function AbstractChart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.calcScaler = function (data) {\n      if (_this.props.fromZero && _this.props.fromNumber) {\n        return Math.max.apply(Math, __spreadArrays(data, [_this.props.fromNumber])) - Math.min.apply(Math, __spreadArrays(data, [0])) || 1;\n      } else if (_this.props.fromZero) {\n        return Math.max.apply(Math, __spreadArrays(data, [0])) - Math.min.apply(Math, __spreadArrays(data, [0])) || 1;\n      } else if (_this.props.fromNumber) {\n        return Math.max.apply(Math, __spreadArrays(data, [_this.props.fromNumber])) - Math.min.apply(Math, __spreadArrays(data, [_this.props.fromNumber])) || 1;\n      } else {\n        return Math.max.apply(Math, data) - Math.min.apply(Math, data) || 1;\n      }\n    };\n    _this.calcBaseHeight = function (data, height) {\n      var min = Math.min.apply(Math, data);\n      var max = Math.max.apply(Math, data);\n      if (min >= 0 && max >= 0) {\n        return height;\n      } else if (min < 0 && max <= 0) {\n        return 0;\n      } else if (min < 0 && max > 0) {\n        return height * max / _this.calcScaler(data);\n      }\n    };\n    _this.calcHeight = function (val, data, height) {\n      var max = Math.max.apply(Math, data);\n      var min = Math.min.apply(Math, data);\n      if (min < 0 && max > 0) {\n        return height * (val / _this.calcScaler(data));\n      } else if (min >= 0 && max >= 0) {\n        return _this.props.fromZero ? height * (val / _this.calcScaler(data)) : height * ((val - min) / _this.calcScaler(data));\n      } else if (min < 0 && max <= 0) {\n        return _this.props.fromZero ? height * (val / _this.calcScaler(data)) : height * ((val - max) / _this.calcScaler(data));\n      }\n    };\n    _this.renderHorizontalLines = function (config) {\n      var count = config.count,\n        width = config.width,\n        height = config.height,\n        paddingTop = config.paddingTop,\n        paddingRight = config.paddingRight,\n        _a = config.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _a === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _a;\n      var basePosition = height * verticalLabelsHeightPercentage;\n      return __spreadArrays(new Array(count + 1)).map(function (_, i) {\n        var y = basePosition / count * i + paddingTop;\n        return (0, _jsxRuntime.jsx)(_reactNativeSvg.Line, Object.assign({\n          x1: paddingRight,\n          y1: y,\n          x2: width,\n          y2: y\n        }, _this.getPropsForBackgroundLines()), Math.random());\n      });\n    };\n    _this.renderHorizontalLine = function (config) {\n      var width = config.width,\n        height = config.height,\n        paddingTop = config.paddingTop,\n        paddingRight = config.paddingRight,\n        _a = config.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _a === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _a;\n      return (0, _jsxRuntime.jsx)(_reactNativeSvg.Line, Object.assign({\n        x1: paddingRight,\n        y1: height * verticalLabelsHeightPercentage + paddingTop,\n        x2: width,\n        y2: height * verticalLabelsHeightPercentage + paddingTop\n      }, _this.getPropsForBackgroundLines()), Math.random());\n    };\n    _this.renderHorizontalLabels = function (config) {\n      var count = config.count,\n        data = config.data,\n        height = config.height,\n        paddingTop = config.paddingTop,\n        paddingRight = config.paddingRight,\n        _a = config.horizontalLabelRotation,\n        horizontalLabelRotation = _a === void 0 ? 0 : _a,\n        _b = config.decimalPlaces,\n        decimalPlaces = _b === void 0 ? 2 : _b,\n        _c = config.formatYLabel,\n        formatYLabel = _c === void 0 ? function (yLabel) {\n          return yLabel;\n        } : _c,\n        _d = config.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _d === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _d;\n      var _e = _this.props,\n        _f = _e.yAxisLabel,\n        yAxisLabel = _f === void 0 ? \"\" : _f,\n        _g = _e.yAxisSuffix,\n        yAxisSuffix = _g === void 0 ? \"\" : _g,\n        _h = _e.yLabelsOffset,\n        yLabelsOffset = _h === void 0 ? 12 : _h;\n      return new Array(count === 1 ? 1 : count + 1).fill(1).map(function (_, i) {\n        var yLabel = String(i * count);\n        if (count === 1) {\n          yLabel = \"\" + yAxisLabel + formatYLabel(data[0].toFixed(decimalPlaces)) + yAxisSuffix;\n        } else {\n          var label = _this.props.fromZero ? _this.calcScaler(data) / count * i + Math.min.apply(Math, __spreadArrays(data, [0])) : _this.calcScaler(data) / count * i + Math.min.apply(Math, data);\n          yLabel = \"\" + yAxisLabel + formatYLabel(label.toFixed(decimalPlaces)) + yAxisSuffix;\n        }\n        var basePosition = height * verticalLabelsHeightPercentage;\n        var x = paddingRight - yLabelsOffset;\n        var y = count === 1 && _this.props.fromZero ? paddingTop + 4 : height * verticalLabelsHeightPercentage - basePosition / count * i + paddingTop;\n        return (0, _jsxRuntime.jsx)(_reactNativeSvg.Text, Object.assign({\n          rotation: horizontalLabelRotation,\n          origin: x + \", \" + y,\n          x: x,\n          textAnchor: \"end\",\n          y: y\n        }, _this.getPropsForLabels(), _this.getPropsForHorizontalLabels(), {\n          children: yLabel\n        }), Math.random());\n      });\n    };\n    _this.renderVerticalLabels = function (_a) {\n      var _b = _a.labels,\n        labels = _b === void 0 ? [] : _b,\n        width = _a.width,\n        height = _a.height,\n        paddingRight = _a.paddingRight,\n        paddingTop = _a.paddingTop,\n        _c = _a.horizontalOffset,\n        horizontalOffset = _c === void 0 ? 0 : _c,\n        _d = _a.stackedBar,\n        stackedBar = _d === void 0 ? false : _d,\n        _e = _a.verticalLabelRotation,\n        verticalLabelRotation = _e === void 0 ? 0 : _e,\n        _f = _a.formatXLabel,\n        formatXLabel = _f === void 0 ? function (xLabel) {\n          return xLabel;\n        } : _f,\n        _g = _a.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _g === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _g;\n      var _h = _this.props,\n        _j = _h.xAxisLabel,\n        xAxisLabel = _j === void 0 ? \"\" : _j,\n        _k = _h.xLabelsOffset,\n        xLabelsOffset = _k === void 0 ? 0 : _k,\n        _l = _h.hidePointsAtIndex,\n        hidePointsAtIndex = _l === void 0 ? [] : _l;\n      var fontSize = 12;\n      var fac = 1;\n      if (stackedBar) {\n        fac = 0.71;\n      }\n      return labels.map(function (label, i) {\n        if (hidePointsAtIndex.includes(i)) {\n          return null;\n        }\n        var x = ((width - paddingRight) / labels.length * i + paddingRight + horizontalOffset) * fac;\n        var y = height * verticalLabelsHeightPercentage + paddingTop + fontSize * 2 + xLabelsOffset;\n        return (0, _jsxRuntime.jsx)(_reactNativeSvg.Text, Object.assign({\n          origin: x + \", \" + y,\n          rotation: verticalLabelRotation,\n          x: x,\n          y: y,\n          textAnchor: verticalLabelRotation === 0 ? \"middle\" : \"start\"\n        }, _this.getPropsForLabels(), _this.getPropsForVerticalLabels(), {\n          children: \"\" + formatXLabel(label) + xAxisLabel\n        }), Math.random());\n      });\n    };\n    _this.renderVerticalLines = function (_a) {\n      var data = _a.data,\n        width = _a.width,\n        height = _a.height,\n        paddingTop = _a.paddingTop,\n        paddingRight = _a.paddingRight,\n        _b = _a.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _b === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _b;\n      var _c = _this.props.yAxisInterval,\n        yAxisInterval = _c === void 0 ? 1 : _c;\n      return __spreadArrays(new Array(Math.ceil(data.length / yAxisInterval))).map(function (_, i) {\n        return (0, _jsxRuntime.jsx)(_reactNativeSvg.Line, Object.assign({\n          x1: Math.floor((width - paddingRight) / (data.length / yAxisInterval) * i + paddingRight),\n          y1: 0,\n          x2: Math.floor((width - paddingRight) / (data.length / yAxisInterval) * i + paddingRight),\n          y2: height * verticalLabelsHeightPercentage + paddingTop\n        }, _this.getPropsForBackgroundLines()), Math.random());\n      });\n    };\n    _this.renderVerticalLine = function (_a) {\n      var height = _a.height,\n        paddingTop = _a.paddingTop,\n        paddingRight = _a.paddingRight,\n        _b = _a.verticalLabelsHeightPercentage,\n        verticalLabelsHeightPercentage = _b === void 0 ? DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _b;\n      return (0, _jsxRuntime.jsx)(_reactNativeSvg.Line, Object.assign({\n        x1: Math.floor(paddingRight),\n        y1: 0,\n        x2: Math.floor(paddingRight),\n        y2: height * verticalLabelsHeightPercentage + paddingTop\n      }, _this.getPropsForBackgroundLines()), Math.random());\n    };\n    _this.renderDefs = function (config) {\n      var width = config.width,\n        height = config.height,\n        backgroundGradientFrom = config.backgroundGradientFrom,\n        backgroundGradientTo = config.backgroundGradientTo,\n        useShadowColorFromDataset = config.useShadowColorFromDataset,\n        data = config.data;\n      var fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\") ? config.backgroundGradientFromOpacity : 1.0;\n      var toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\") ? config.backgroundGradientToOpacity : 1.0;\n      var fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\") ? config.fillShadowGradient : _this.props.chartConfig.color(1.0);\n      var fillShadowGradientOpacity = config.hasOwnProperty(\"fillShadowGradientOpacity\") ? config.fillShadowGradientOpacity : 0.1;\n      var fillShadowGradientFrom = config.hasOwnProperty(\"fillShadowGradientFrom\") ? config.fillShadowGradientFrom : fillShadowGradient;\n      var fillShadowGradientFromOpacity = config.hasOwnProperty(\"fillShadowGradientFromOpacity\") ? config.fillShadowGradientFromOpacity : fillShadowGradientOpacity;\n      var fillShadowGradientFromOffset = config.hasOwnProperty(\"fillShadowGradientFromOffset\") ? config.fillShadowGradientFromOffset : 0;\n      var fillShadowGradientTo = config.hasOwnProperty(\"fillShadowGradientTo\") ? config.fillShadowGradientTo : _this.props.chartConfig.color(1.0);\n      var fillShadowGradientToOpacity = config.hasOwnProperty(\"fillShadowGradientToOpacity\") ? config.fillShadowGradientToOpacity : 0.1;\n      var fillShadowGradientToOffset = config.hasOwnProperty(\"fillShadowGradientToOffset\") ? config.fillShadowGradientToOffset : 1;\n      return (0, _jsxRuntime.jsxs)(_reactNativeSvg.Defs, {\n        children: [(0, _jsxRuntime.jsxs)(_reactNativeSvg.LinearGradient, {\n          id: \"backgroundGradient\",\n          x1: 0,\n          y1: height,\n          x2: width,\n          y2: 0,\n          gradientUnits: \"userSpaceOnUse\",\n          children: [(0, _jsxRuntime.jsx)(_reactNativeSvg.Stop, {\n            offset: \"0\",\n            stopColor: backgroundGradientFrom,\n            stopOpacity: fromOpacity\n          }), (0, _jsxRuntime.jsx)(_reactNativeSvg.Stop, {\n            offset: \"1\",\n            stopColor: backgroundGradientTo,\n            stopOpacity: toOpacity\n          })]\n        }), useShadowColorFromDataset ? data.map(function (dataset, index) {\n          return (0, _jsxRuntime.jsxs)(_reactNativeSvg.LinearGradient, {\n            id: \"fillShadowGradientFrom_\" + index,\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: height,\n            gradientUnits: \"userSpaceOnUse\",\n            children: [(0, _jsxRuntime.jsx)(_reactNativeSvg.Stop, {\n              offset: fillShadowGradientFromOffset,\n              stopColor: dataset.color ? dataset.color(1.0) : fillShadowGradientFrom,\n              stopOpacity: fillShadowGradientFromOpacity\n            }), (0, _jsxRuntime.jsx)(_reactNativeSvg.Stop, {\n              offset: fillShadowGradientToOffset,\n              stopColor: dataset.color ? dataset.color(fillShadowGradientFromOpacity) : fillShadowGradientFrom,\n              stopOpacity: fillShadowGradientToOpacity || 0\n            })]\n          }, \"\" + index);\n        }) : (0, _jsxRuntime.jsxs)(_reactNativeSvg.LinearGradient, {\n          id: \"fillShadowGradientFrom\",\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: height,\n          gradientUnits: \"userSpaceOnUse\",\n          children: [(0, _jsxRuntime.jsx)(_reactNativeSvg.Stop, {\n            offset: fillShadowGradientFromOffset,\n            stopColor: fillShadowGradientFrom,\n            stopOpacity: fillShadowGradientFromOpacity\n          }), (0, _jsxRuntime.jsx)(_reactNativeSvg.Stop, {\n            offset: fillShadowGradientToOffset,\n            stopColor: fillShadowGradientTo || fillShadowGradientFrom,\n            stopOpacity: fillShadowGradientToOpacity || 0\n          })]\n        })]\n      });\n    };\n    return _this;\n  }\n  AbstractChart.prototype.getPropsForBackgroundLines = function () {\n    var _a = this.props.chartConfig.propsForBackgroundLines,\n      propsForBackgroundLines = _a === void 0 ? {} : _a;\n    return __assign({\n      stroke: this.props.chartConfig.color(0.2),\n      strokeDasharray: \"5, 10\",\n      strokeWidth: 1\n    }, propsForBackgroundLines);\n  };\n  AbstractChart.prototype.getPropsForLabels = function () {\n    var _a = this.props.chartConfig,\n      _b = _a.propsForLabels,\n      propsForLabels = _b === void 0 ? {} : _b,\n      color = _a.color,\n      _c = _a.labelColor,\n      labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fontSize: 12,\n      fill: labelColor(0.8)\n    }, propsForLabels);\n  };\n  AbstractChart.prototype.getPropsForVerticalLabels = function () {\n    var _a = this.props.chartConfig,\n      _b = _a.propsForVerticalLabels,\n      propsForVerticalLabels = _b === void 0 ? {} : _b,\n      color = _a.color,\n      _c = _a.labelColor,\n      labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fill: labelColor(0.8)\n    }, propsForVerticalLabels);\n  };\n  AbstractChart.prototype.getPropsForHorizontalLabels = function () {\n    var _a = this.props.chartConfig,\n      _b = _a.propsForHorizontalLabels,\n      propsForHorizontalLabels = _b === void 0 ? {} : _b,\n      color = _a.color,\n      _c = _a.labelColor,\n      labelColor = _c === void 0 ? color : _c;\n    return __assign({\n      fill: labelColor(0.8)\n    }, propsForHorizontalLabels);\n  };\n  return AbstractChart;\n}(_react.Component);\nvar _default = AbstractChart;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNativeSvg","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","DEFAULT_X_LABELS_HEIGHT_PERCENTAGE","exports","AbstractChart","_super","__extends","_this","apply","arguments","calcScaler","data","props","fromZero","fromNumber","Math","max","__spreadArrays","min","calcBaseHeight","height","calcHeight","val","renderHorizontalLines","config","count","width","paddingTop","paddingRight","_a","verticalLabelsHeightPercentage","basePosition","Array","map","_","i","y","jsx","Line","assign","x1","y1","x2","y2","getPropsForBackgroundLines","random","renderHorizontalLine","renderHorizontalLabels","horizontalLabelRotation","_b","decimalPlaces","_c","formatYLabel","yLabel","_d","_e","_f","yAxisLabel","_g","yAxisSuffix","_h","yLabelsOffset","fill","String","toFixed","label","x","Text","rotation","origin","textAnchor","getPropsForLabels","getPropsForHorizontalLabels","children","renderVerticalLabels","labels","horizontalOffset","stackedBar","verticalLabelRotation","formatXLabel","xLabel","_j","xAxisLabel","_k","xLabelsOffset","_l","hidePointsAtIndex","fontSize","fac","includes","length","getPropsForVerticalLabels","renderVerticalLines","yAxisInterval","ceil","floor","renderVerticalLine","renderDefs","backgroundGradientFrom","backgroundGradientTo","useShadowColorFromDataset","fromOpacity","backgroundGradientFromOpacity","toOpacity","backgroundGradientToOpacity","fillShadowGradient","chartConfig","color","fillShadowGradientOpacity","fillShadowGradientFrom","fillShadowGradientFromOpacity","fillShadowGradientFromOffset","fillShadowGradientTo","fillShadowGradientToOpacity","fillShadowGradientToOffset","jsxs","Defs","LinearGradient","id","gradientUnits","Stop","offset","stopColor","stopOpacity","dataset","index","propsForBackgroundLines","__assign","stroke","strokeDasharray","strokeWidth","propsForLabels","labelColor","propsForVerticalLabels","propsForHorizontalLabels","Component","_default"],"sources":["/Users/subhayuchakravarty/MyPy/LocalApps/AppFronts/Folio/node_modules/react-native-chart-kit/src/AbstractChart.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Defs, Line, LinearGradient, Stop, Text } from \"react-native-svg\";\n\nimport { ChartConfig, Dataset, PartialBy } from \"./HelperTypes\";\n\nexport interface AbstractChartProps {\n  fromZero?: boolean;\n  fromNumber?: number;\n  chartConfig?: AbstractChartConfig;\n  yAxisLabel?: string;\n  yAxisSuffix?: string;\n  yLabelsOffset?: number;\n  yAxisInterval?: number;\n  xAxisLabel?: string;\n  xLabelsOffset?: number;\n  hidePointsAtIndex?: number[];\n}\n\nexport interface AbstractChartConfig extends ChartConfig {\n  count?: number;\n  data?: Dataset[];\n  width?: number;\n  height?: number;\n  paddingTop?: number;\n  paddingRight?: number;\n  horizontalLabelRotation?: number;\n  formatYLabel?: (yLabel: string) => string;\n  labels?: string[];\n  horizontalOffset?: number;\n  stackedBar?: boolean;\n  verticalLabelRotation?: number;\n  formatXLabel?: (xLabel: string) => string;\n  verticalLabelsHeightPercentage?: number;\n  formatTopBarValue?: (topBarValue: number) => string | number;\n}\n\nexport type AbstractChartState = {};\n\nexport const DEFAULT_X_LABELS_HEIGHT_PERCENTAGE = 0.75;\n\nclass AbstractChart<\n  IProps extends AbstractChartProps,\n  IState extends AbstractChartState\n> extends Component<AbstractChartProps & IProps, AbstractChartState & IState> {\n  calcScaler = (data: number[]) => {\n    if (this.props.fromZero && this.props.fromNumber) {\n      return Math.max(...data, this.props.fromNumber) - Math.min(...data, 0) || 1;\n    } else if (this.props.fromZero) {\n      return Math.max(...data, 0) - Math.min(...data, 0) || 1;\n    } else if (this.props.fromNumber) {\n      return (\n        Math.max(...data, this.props.fromNumber) -\n          Math.min(...data, this.props.fromNumber) || 1\n      );\n    } else {\n      return Math.max(...data) - Math.min(...data) || 1;\n    }\n  };\n\n  calcBaseHeight = (data: number[], height: number) => {\n    const min = Math.min(...data);\n    const max = Math.max(...data);\n    if (min >= 0 && max >= 0) {\n      return height;\n    } else if (min < 0 && max <= 0) {\n      return 0;\n    } else if (min < 0 && max > 0) {\n      return (height * max) / this.calcScaler(data);\n    }\n  };\n\n  calcHeight = (val: number, data: number[], height: number) => {\n    const max = Math.max(...data);\n    const min = Math.min(...data);\n\n    if (min < 0 && max > 0) {\n      return height * (val / this.calcScaler(data));\n    } else if (min >= 0 && max >= 0) {\n      return this.props.fromZero\n        ? height * (val / this.calcScaler(data))\n        : height * ((val - min) / this.calcScaler(data));\n    } else if (min < 0 && max <= 0) {\n      return this.props.fromZero\n        ? height * (val / this.calcScaler(data))\n        : height * ((val - max) / this.calcScaler(data));\n    }\n  };\n\n  getPropsForBackgroundLines() {\n    const { propsForBackgroundLines = {} } = this.props.chartConfig;\n    return {\n      stroke: this.props.chartConfig.color(0.2),\n      strokeDasharray: \"5, 10\",\n      strokeWidth: 1,\n      ...propsForBackgroundLines\n    };\n  }\n\n  getPropsForLabels() {\n    const {\n      propsForLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fontSize: 12,\n      fill: labelColor(0.8),\n      ...propsForLabels\n    };\n  }\n\n  getPropsForVerticalLabels() {\n    const {\n      propsForVerticalLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fill: labelColor(0.8),\n      ...propsForVerticalLabels\n    };\n  }\n\n  getPropsForHorizontalLabels() {\n    const {\n      propsForHorizontalLabels = {},\n      color,\n      labelColor = color\n    } = this.props.chartConfig;\n    return {\n      fill: labelColor(0.8),\n      ...propsForHorizontalLabels\n    };\n  }\n\n  renderHorizontalLines = config => {\n    const {\n      count,\n      width,\n      height,\n      paddingTop,\n      paddingRight,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n    } = config;\n    const basePosition = height * verticalLabelsHeightPercentage;\n\n    return [...new Array(count + 1)].map((_, i) => {\n      const y = (basePosition / count) * i + paddingTop;\n      return (\n        <Line\n          key={Math.random()}\n          x1={paddingRight}\n          y1={y}\n          x2={width}\n          y2={y}\n          {...this.getPropsForBackgroundLines()}\n        />\n      );\n    });\n  };\n\n  renderHorizontalLine = config => {\n    const {\n      width,\n      height,\n      paddingTop,\n      paddingRight,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n    } = config;\n    return (\n      <Line\n        key={Math.random()}\n        x1={paddingRight}\n        y1={height * verticalLabelsHeightPercentage + paddingTop}\n        x2={width}\n        y2={height * verticalLabelsHeightPercentage + paddingTop}\n        {...this.getPropsForBackgroundLines()}\n      />\n    );\n  };\n\n  renderHorizontalLabels = (\n    config: Omit<AbstractChartConfig, \"data\"> & { data: number[] }\n  ) => {\n    const {\n      count,\n      data,\n      height,\n      paddingTop,\n      paddingRight,\n      horizontalLabelRotation = 0,\n      decimalPlaces = 2,\n      formatYLabel = (yLabel: string) => yLabel,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n    } = config;\n\n    const {\n      yAxisLabel = \"\",\n      yAxisSuffix = \"\",\n      yLabelsOffset = 12\n    } = this.props;\n    return new Array(count === 1 ? 1 : count + 1).fill(1).map((_, i) => {\n      let yLabel = String(i * count);\n\n      if (count === 1) {\n        yLabel = `${yAxisLabel}${formatYLabel(\n          data[0].toFixed(decimalPlaces)\n        )}${yAxisSuffix}`;\n      } else {\n        const label = this.props.fromZero\n          ? (this.calcScaler(data) / count) * i + Math.min(...data, 0)\n          : (this.calcScaler(data) / count) * i + Math.min(...data);\n        yLabel = `${yAxisLabel}${formatYLabel(\n          label.toFixed(decimalPlaces)\n        )}${yAxisSuffix}`;\n      }\n\n      const basePosition = height * verticalLabelsHeightPercentage;\n      const x = paddingRight - yLabelsOffset;\n      const y =\n        count === 1 && this.props.fromZero\n          ? paddingTop + 4\n          : height * verticalLabelsHeightPercentage -\n            (basePosition / count) * i +\n            paddingTop;\n      return (\n        <Text\n          rotation={horizontalLabelRotation}\n          origin={`${x}, ${y}`}\n          key={Math.random()}\n          x={x}\n          textAnchor=\"end\"\n          y={y}\n          {...this.getPropsForLabels()}\n          {...this.getPropsForHorizontalLabels()}\n        >\n          {yLabel}\n        </Text>\n      );\n    });\n  };\n\n  renderVerticalLabels = ({\n    labels = [],\n    width,\n    height,\n    paddingRight,\n    paddingTop,\n    horizontalOffset = 0,\n    stackedBar = false,\n    verticalLabelRotation = 0,\n    formatXLabel = xLabel => xLabel,\n    verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n  }: Pick<\n    AbstractChartConfig,\n    | \"labels\"\n    | \"width\"\n    | \"height\"\n    | \"paddingRight\"\n    | \"paddingTop\"\n    | \"horizontalOffset\"\n    | \"stackedBar\"\n    | \"verticalLabelRotation\"\n    | \"formatXLabel\"\n    | \"verticalLabelsHeightPercentage\"\n  >) => {\n    const {\n      xAxisLabel = \"\",\n      xLabelsOffset = 0,\n      hidePointsAtIndex = []\n    } = this.props;\n\n    const fontSize = 12;\n\n    let fac = 1;\n    if (stackedBar) {\n      fac = 0.71;\n    }\n\n    return labels.map((label, i) => {\n      if (hidePointsAtIndex.includes(i)) {\n        return null;\n      }\n\n      const x =\n        (((width - paddingRight) / labels.length) * i +\n          paddingRight +\n          horizontalOffset) *\n        fac;\n\n      const y =\n        height * verticalLabelsHeightPercentage +\n        paddingTop +\n        fontSize * 2 +\n        xLabelsOffset;\n\n      return (\n        <Text\n          origin={`${x}, ${y}`}\n          rotation={verticalLabelRotation}\n          key={Math.random()}\n          x={x}\n          y={y}\n          textAnchor={verticalLabelRotation === 0 ? \"middle\" : \"start\"}\n          {...this.getPropsForLabels()}\n          {...this.getPropsForVerticalLabels()}\n        >\n          {`${formatXLabel(label)}${xAxisLabel}`}\n        </Text>\n      );\n    });\n  };\n\n  renderVerticalLines = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight,\n    verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n  }: Omit<\n    Pick<\n      AbstractChartConfig,\n      | \"data\"\n      | \"width\"\n      | \"height\"\n      | \"paddingRight\"\n      | \"paddingTop\"\n      | \"verticalLabelsHeightPercentage\"\n    >,\n    \"data\"\n  > & { data: number[] }) => {\n    const { yAxisInterval = 1 } = this.props;\n\n    return [...new Array(Math.ceil(data.length / yAxisInterval))].map(\n      (_, i) => {\n        return (\n          <Line\n            key={Math.random()}\n            x1={Math.floor(\n              ((width - paddingRight) / (data.length / yAxisInterval)) * i +\n                paddingRight\n            )}\n            y1={0}\n            x2={Math.floor(\n              ((width - paddingRight) / (data.length / yAxisInterval)) * i +\n                paddingRight\n            )}\n            y2={height * verticalLabelsHeightPercentage + paddingTop}\n            {...this.getPropsForBackgroundLines()}\n          />\n        );\n      }\n    );\n  };\n\n  renderVerticalLine = ({\n    height,\n    paddingTop,\n    paddingRight,\n    verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n  }: Pick<\n    AbstractChartConfig,\n    \"height\" | \"paddingRight\" | \"paddingTop\" | \"verticalLabelsHeightPercentage\"\n  >) => (\n    <Line\n      key={Math.random()}\n      x1={Math.floor(paddingRight)}\n      y1={0}\n      x2={Math.floor(paddingRight)}\n      y2={height * verticalLabelsHeightPercentage + paddingTop}\n      {...this.getPropsForBackgroundLines()}\n    />\n  );\n\n  renderDefs = (\n    config: Pick<\n      PartialBy<\n        AbstractChartConfig,\n        | \"backgroundGradientFromOpacity\"\n        | \"backgroundGradientToOpacity\"\n        | \"fillShadowGradient\"\n        | \"fillShadowGradientOpacity\"\n        | \"fillShadowGradientFrom\"\n        | \"fillShadowGradientFromOpacity\"\n        | \"fillShadowGradientFromOffset\"\n        | \"fillShadowGradientTo\"\n        | \"fillShadowGradientToOpacity\"\n        | \"fillShadowGradientToOffset\"\n      >,\n      | \"width\"\n      | \"height\"\n      | \"backgroundGradientFrom\"\n      | \"backgroundGradientTo\"\n      | \"useShadowColorFromDataset\"\n      | \"data\"\n      | \"backgroundGradientFromOpacity\"\n      | \"backgroundGradientToOpacity\"\n      | \"fillShadowGradient\"\n      | \"fillShadowGradientOpacity\"\n      | \"fillShadowGradientFrom\"\n      | \"fillShadowGradientFromOpacity\"\n      | \"fillShadowGradientFromOffset\"\n      | \"fillShadowGradientTo\"\n      | \"fillShadowGradientToOpacity\"\n      | \"fillShadowGradientToOffset\"\n    >\n  ) => {\n    const {\n      width,\n      height,\n      backgroundGradientFrom,\n      backgroundGradientTo,\n      useShadowColorFromDataset,\n      data\n    } = config;\n\n    const fromOpacity = config.hasOwnProperty(\"backgroundGradientFromOpacity\")\n      ? config.backgroundGradientFromOpacity\n      : 1.0;\n    const toOpacity = config.hasOwnProperty(\"backgroundGradientToOpacity\")\n      ? config.backgroundGradientToOpacity\n      : 1.0;\n\n    const fillShadowGradient = config.hasOwnProperty(\"fillShadowGradient\")\n      ? config.fillShadowGradient\n      : this.props.chartConfig.color(1.0);\n\n    const fillShadowGradientOpacity = config.hasOwnProperty(\n      \"fillShadowGradientOpacity\"\n    )\n      ? config.fillShadowGradientOpacity\n      : 0.1;\n\n    const fillShadowGradientFrom = config.hasOwnProperty(\n      \"fillShadowGradientFrom\"\n    )\n      ? config.fillShadowGradientFrom\n      : fillShadowGradient;\n\n    const fillShadowGradientFromOpacity = config.hasOwnProperty(\n      \"fillShadowGradientFromOpacity\"\n    )\n      ? config.fillShadowGradientFromOpacity\n      : fillShadowGradientOpacity;\n\n    const fillShadowGradientFromOffset = config.hasOwnProperty(\n      \"fillShadowGradientFromOffset\"\n    )\n      ? config.fillShadowGradientFromOffset\n      : 0;\n\n    const fillShadowGradientTo = config.hasOwnProperty(\"fillShadowGradientTo\")\n      ? config.fillShadowGradientTo\n      : this.props.chartConfig.color(1.0);\n\n    const fillShadowGradientToOpacity = config.hasOwnProperty(\n      \"fillShadowGradientToOpacity\"\n    )\n      ? config.fillShadowGradientToOpacity\n      : 0.1;\n\n    const fillShadowGradientToOffset = config.hasOwnProperty(\n      \"fillShadowGradientToOffset\"\n    )\n      ? config.fillShadowGradientToOffset\n      : 1;\n\n    return (\n      <Defs>\n        <LinearGradient\n          id=\"backgroundGradient\"\n          x1={0}\n          y1={height}\n          x2={width}\n          y2={0}\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <Stop\n            offset=\"0\"\n            stopColor={backgroundGradientFrom}\n            stopOpacity={fromOpacity}\n          />\n          <Stop\n            offset=\"1\"\n            stopColor={backgroundGradientTo}\n            stopOpacity={toOpacity}\n          />\n        </LinearGradient>\n        {useShadowColorFromDataset ? (\n          data.map((dataset, index) => (\n            <LinearGradient\n              id={`fillShadowGradientFrom_${index}`}\n              key={`${index}`}\n              x1={0}\n              y1={0}\n              x2={0}\n              y2={height}\n              gradientUnits=\"userSpaceOnUse\"\n            >\n              <Stop\n                offset={fillShadowGradientFromOffset}\n                stopColor={\n                  dataset.color ? dataset.color(1.0) : fillShadowGradientFrom\n                }\n                stopOpacity={fillShadowGradientFromOpacity}\n              />\n              <Stop\n                offset={fillShadowGradientToOffset}\n                stopColor={\n                  dataset.color\n                    ? dataset.color(fillShadowGradientFromOpacity)\n                    : fillShadowGradientFrom\n                }\n                stopOpacity={fillShadowGradientToOpacity || 0}\n              />\n            </LinearGradient>\n          ))\n        ) : (\n          <LinearGradient\n            id=\"fillShadowGradientFrom\"\n            x1={0}\n            y1={0}\n            x2={0}\n            y2={height}\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop\n              offset={fillShadowGradientFromOffset}\n              stopColor={fillShadowGradientFrom}\n              stopOpacity={fillShadowGradientFromOpacity}\n            />\n            <Stop\n              offset={fillShadowGradientToOffset}\n              stopColor={fillShadowGradientTo || fillShadowGradientFrom}\n              stopOpacity={fillShadowGradientToOpacity || 0}\n            />\n          </LinearGradient>\n        )}\n      </Defs>\n    );\n  };\n}\n\nexport default AbstractChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}