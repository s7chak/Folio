{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeSvg = require(\"react-native-svg\");\nvar _AbstractChart = _interopRequireWildcard(require(\"./AbstractChart\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"/Users/subhayuchakravarty/MyPy/LocalApps/AppFronts/Folio/node_modules/react-native-chart-kit/dist/StackedBarChart.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar StackedBarChart = function (_super) {\n  __extends(StackedBarChart, _super);\n  function StackedBarChart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.getBarPercentage = function () {\n      var _a = _this.props.chartConfig.barPercentage,\n        barPercentage = _a === void 0 ? 1 : _a;\n      return barPercentage;\n    };\n    _this.getBarRadius = function (ret, x) {\n      return _this.props.chartConfig.barRadius && ret.length === x.length - 1 ? _this.props.chartConfig.barRadius : 0;\n    };\n    _this.renderBars = function (_a) {\n      var data = _a.data,\n        width = _a.width,\n        height = _a.height,\n        paddingTop = _a.paddingTop,\n        paddingRight = _a.paddingRight,\n        border = _a.border,\n        colors = _a.colors,\n        _b = _a.stackedBar,\n        stackedBar = _b === void 0 ? false : _b,\n        verticalLabelsHeightPercentage = _a.verticalLabelsHeightPercentage;\n      return data.map(function (x, i) {\n        var barWidth = 32 * _this.getBarPercentage();\n        var ret = [];\n        var h = 0;\n        var st = paddingTop;\n        var fac = 1;\n        if (stackedBar) {\n          fac = 0.7;\n        }\n        var sum = _this.props.percentile ? x.reduce(function (a, b) {\n          return a + b;\n        }, 0) : border;\n        var barsAreaHeight = height * verticalLabelsHeightPercentage;\n        for (var z = 0; z < x.length; z++) {\n          h = barsAreaHeight * (x[z] / sum);\n          var y = barsAreaHeight - h + st;\n          var xC = (paddingRight + i * (width - paddingRight) / data.length + barWidth / 2) * fac;\n          ret.push((0, _jsxRuntime.jsx)(_reactNativeSvg.Rect, {\n            x: xC,\n            y: y,\n            rx: _this.getBarRadius(ret, x),\n            ry: _this.getBarRadius(ret, x),\n            width: barWidth,\n            height: h,\n            fill: colors[z]\n          }, Math.random()));\n          if (!_this.props.hideLegend) {\n            ret.push((0, _jsxRuntime.jsx)(_reactNativeSvg.Text, Object.assign({\n              x: xC + 7 + barWidth / 2,\n              textAnchor: \"end\",\n              y: h > 15 ? y + 15 : y + 7\n            }, _this.getPropsForLabels(), {\n              children: x[z]\n            }), Math.random()));\n          }\n          st -= h;\n        }\n        return ret;\n      });\n    };\n    _this.renderLegend = function (_a) {\n      var legend = _a.legend,\n        colors = _a.colors,\n        width = _a.width,\n        height = _a.height;\n      return legend.map(function (x, i) {\n        return (0, _jsxRuntime.jsxs)(_reactNativeSvg.G, {\n          children: [(0, _jsxRuntime.jsx)(_reactNativeSvg.Rect, {\n            width: \"16px\",\n            height: \"16px\",\n            fill: colors[i],\n            rx: 8,\n            ry: 8,\n            x: width * 0.71,\n            y: height * 0.7 - i * 50\n          }), (0, _jsxRuntime.jsx)(_reactNativeSvg.Text, Object.assign({\n            x: width * 0.78,\n            y: height * 0.76 - i * 50\n          }, _this.getPropsForLabels(), {\n            children: x\n          }))]\n        }, Math.random());\n      });\n    };\n    return _this;\n  }\n  StackedBarChart.prototype.render = function () {\n    var paddingTop = 15;\n    var paddingRight = 50;\n    var barWidth = 32 * this.getBarPercentage();\n    var _a = this.props,\n      width = _a.width,\n      height = _a.height,\n      _b = _a.style,\n      style = _b === void 0 ? {} : _b,\n      data = _a.data,\n      _c = _a.withHorizontalLabels,\n      withHorizontalLabels = _c === void 0 ? true : _c,\n      _d = _a.withVerticalLabels,\n      withVerticalLabels = _d === void 0 ? true : _d,\n      _e = _a.segments,\n      segments = _e === void 0 ? 4 : _e,\n      decimalPlaces = _a.decimalPlaces,\n      _f = _a.percentile,\n      percentile = _f === void 0 ? false : _f,\n      _g = _a.verticalLabelsHeightPercentage,\n      verticalLabelsHeightPercentage = _g === void 0 ? _AbstractChart.DEFAULT_X_LABELS_HEIGHT_PERCENTAGE : _g,\n      _h = _a.formatYLabel,\n      formatYLabel = _h === void 0 ? function (yLabel) {\n        return yLabel;\n      } : _h,\n      _j = _a.hideLegend,\n      hideLegend = _j === void 0 ? false : _j;\n    var _k = style.borderRadius,\n      borderRadius = _k === void 0 ? 0 : _k;\n    var config = {\n      width: width,\n      height: height\n    };\n    var border = 0;\n    var max = 0;\n    for (var i = 0; i < data.data.length; i++) {\n      var actual = data.data[i].reduce(function (pv, cv) {\n        return pv + cv;\n      }, 0);\n      if (actual > max) {\n        max = actual;\n      }\n    }\n    if (percentile) {\n      border = 100;\n    } else {\n      border = max;\n    }\n    var showLegend = !hideLegend && data.legend && data.legend.length != 0;\n    var stackedBar = showLegend;\n    return (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: style,\n      children: (0, _jsxRuntime.jsxs)(_reactNativeSvg.Svg, {\n        height: height,\n        width: width,\n        children: [this.renderDefs(__assign(__assign({}, config), this.props.chartConfig)), (0, _jsxRuntime.jsx)(_reactNativeSvg.Rect, {\n          width: \"100%\",\n          height: height,\n          rx: borderRadius,\n          ry: borderRadius,\n          fill: \"url(#backgroundGradient)\"\n        }), (0, _jsxRuntime.jsx)(_reactNativeSvg.G, {\n          children: this.renderHorizontalLines(__assign(__assign({}, config), {\n            count: segments,\n            paddingTop: paddingTop,\n            verticalLabelsHeightPercentage: verticalLabelsHeightPercentage\n          }))\n        }), (0, _jsxRuntime.jsx)(_reactNativeSvg.G, {\n          children: withHorizontalLabels ? this.renderHorizontalLabels(__assign(__assign({}, config), {\n            count: segments,\n            data: [0, border],\n            paddingTop: paddingTop,\n            paddingRight: paddingRight,\n            decimalPlaces: decimalPlaces,\n            verticalLabelsHeightPercentage: verticalLabelsHeightPercentage,\n            formatYLabel: formatYLabel\n          })) : null\n        }), (0, _jsxRuntime.jsx)(_reactNativeSvg.G, {\n          children: withVerticalLabels ? this.renderVerticalLabels(__assign(__assign({}, config), {\n            labels: data.labels,\n            paddingRight: paddingRight + 28,\n            stackedBar: stackedBar,\n            paddingTop: paddingTop,\n            horizontalOffset: barWidth,\n            verticalLabelsHeightPercentage: verticalLabelsHeightPercentage\n          })) : null\n        }), (0, _jsxRuntime.jsx)(_reactNativeSvg.G, {\n          children: this.renderBars(__assign(__assign({}, config), {\n            data: data.data,\n            border: border,\n            colors: this.props.data.barColors,\n            paddingTop: paddingTop,\n            paddingRight: paddingRight + 20,\n            stackedBar: stackedBar,\n            verticalLabelsHeightPercentage: verticalLabelsHeightPercentage\n          }))\n        }), showLegend && this.renderLegend(__assign(__assign({}, config), {\n          legend: data.legend,\n          colors: this.props.data.barColors\n        }))]\n      })\n    });\n  };\n  return StackedBarChart;\n}(_AbstractChart.default);\nvar _default = StackedBarChart;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeSvg","_AbstractChart","_interopRequireWildcard","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","StackedBarChart","_super","__extends","_this","apply","arguments","getBarPercentage","_a","props","chartConfig","barPercentage","getBarRadius","ret","x","barRadius","length","renderBars","data","width","height","paddingTop","paddingRight","border","colors","_b","stackedBar","verticalLabelsHeightPercentage","map","i","barWidth","h","st","fac","sum","percentile","reduce","a","b","barsAreaHeight","z","y","xC","push","jsx","Rect","rx","ry","fill","Math","random","hideLegend","Text","assign","textAnchor","getPropsForLabels","children","renderLegend","legend","jsxs","G","render","style","_c","withHorizontalLabels","_d","withVerticalLabels","_e","segments","decimalPlaces","_f","_g","DEFAULT_X_LABELS_HEIGHT_PERCENTAGE","_h","formatYLabel","yLabel","_j","_k","borderRadius","config","max","actual","pv","cv","showLegend","View","Svg","renderDefs","__assign","renderHorizontalLines","count","renderHorizontalLabels","renderVerticalLabels","labels","horizontalOffset","barColors","AbstractChart","_default","exports"],"sources":["/Users/subhayuchakravarty/MyPy/LocalApps/AppFronts/Folio/node_modules/react-native-chart-kit/src/StackedBarChart.tsx"],"sourcesContent":["import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { G, Rect, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart, {\n  AbstractChartConfig,\n  AbstractChartProps,\n  DEFAULT_X_LABELS_HEIGHT_PERCENTAGE\n} from \"./AbstractChart\";\n\nexport interface StackedBarChartData {\n  labels: string[];\n  legend: string[];\n  data: number[][];\n  barColors: string[];\n}\n\nexport interface StackedBarChartProps extends AbstractChartProps {\n  /**\n   * E.g.\n   * ```javascript\n   * const data = {\n   *   labels: [\"Test1\", \"Test2\"],\n   *   legend: [\"L1\", \"L2\", \"L3\"],\n   *   data: [[60, 60, 60], [30, 30, 60]],\n   *   barColors: [\"#dfe4ea\", \"#ced6e0\", \"#a4b0be\"]\n   * };\n   * ```\n   */\n  data: StackedBarChartData;\n  width: number;\n  height: number;\n  chartConfig: AbstractChartConfig;\n  hideLegend: boolean;\n  style?: Partial<ViewStyle>;\n  barPercentage?: number;\n  decimalPlaces?: number;\n  /**\n   * Show vertical labels - default: True.\n   */\n  withVerticalLabels?: boolean;\n  /**\n   * Show horizontal labels - default: True.\n   */\n  withHorizontalLabels?: boolean;\n  /**\n   * The number of horizontal lines\n   */\n  segments?: number;\n\n  percentile?: boolean;\n\n  /**\n   * Percentage of the chart height, dedicated to vertical labels\n   * (space below chart)\n   */\n  verticalLabelsHeightPercentage?: number;\n\n  formatYLabel?: (yLabel: string) => string;\n}\n\ntype StackedBarChartState = {};\n\nclass StackedBarChart extends AbstractChart<\n  StackedBarChartProps,\n  StackedBarChartState\n> {\n  getBarPercentage = () => {\n    const { barPercentage = 1 } = this.props.chartConfig;\n    return barPercentage;\n  };\n\n  getBarRadius = (ret: string | any[], x: string | any[]) => {\n    return this.props.chartConfig.barRadius && ret.length === x.length - 1\n      ? this.props.chartConfig.barRadius\n      : 0;\n  };\n\n  renderBars = ({\n    data,\n    width,\n    height,\n    paddingTop,\n    paddingRight,\n    border,\n    colors,\n    stackedBar = false,\n    verticalLabelsHeightPercentage\n  }: Pick<\n    Omit<AbstractChartConfig, \"data\">,\n    | \"width\"\n    | \"height\"\n    | \"paddingRight\"\n    | \"paddingTop\"\n    | \"stackedBar\"\n    | \"verticalLabelsHeightPercentage\"\n  > & {\n    border: number;\n    colors: string[];\n    data: number[][];\n  }) =>\n    data.map((x, i) => {\n      const barWidth = 32 * this.getBarPercentage();\n      const ret = [];\n      let h = 0;\n      let st = paddingTop;\n\n      let fac = 1;\n      if (stackedBar) {\n        fac = 0.7;\n      }\n      const sum = this.props.percentile ? x.reduce((a, b) => a + b, 0) : border;\n      const barsAreaHeight = height * verticalLabelsHeightPercentage;\n      for (let z = 0; z < x.length; z++) {\n        h = barsAreaHeight * (x[z] / sum);\n        const y = barsAreaHeight - h + st;\n        const xC =\n          (paddingRight +\n            (i * (width - paddingRight)) / data.length +\n            barWidth / 2) *\n          fac;\n\n        ret.push(\n          <Rect\n            key={Math.random()}\n            x={xC}\n            y={y}\n            rx={this.getBarRadius(ret, x)}\n            ry={this.getBarRadius(ret, x)}\n            width={barWidth}\n            height={h}\n            fill={colors[z]}\n          />\n        );\n\n        if (!this.props.hideLegend) {\n          ret.push(\n            <Text\n              key={Math.random()}\n              x={xC + 7 + barWidth / 2}\n              textAnchor=\"end\"\n              y={h > 15 ? y + 15 : y + 7}\n              {...this.getPropsForLabels()}\n            >\n              {x[z]}\n            </Text>\n          );\n        }\n\n        st -= h;\n      }\n\n      return ret;\n    });\n\n  renderLegend = ({\n    legend,\n    colors,\n    width,\n    height\n  }: Pick<AbstractChartConfig, \"width\" | \"height\"> & {\n    legend: string[];\n    colors: string[];\n  }) =>\n    legend.map((x, i) => {\n      return (\n        <G key={Math.random()}>\n          <Rect\n            width=\"16px\"\n            height=\"16px\"\n            fill={colors[i]}\n            rx={8}\n            ry={8}\n            x={width * 0.71}\n            y={height * 0.7 - i * 50}\n          />\n          <Text\n            x={width * 0.78}\n            y={height * 0.76 - i * 50}\n            {...this.getPropsForLabels()}\n          >\n            {x}\n          </Text>\n        </G>\n      );\n    });\n\n  render() {\n    const paddingTop = 15;\n    const paddingRight = 50;\n    const barWidth = 32 * this.getBarPercentage();\n\n    const {\n      width,\n      height,\n      style = {},\n      data,\n      withHorizontalLabels = true,\n      withVerticalLabels = true,\n      segments = 4,\n      decimalPlaces,\n      percentile = false,\n      verticalLabelsHeightPercentage = DEFAULT_X_LABELS_HEIGHT_PERCENTAGE,\n      formatYLabel = (yLabel: string) => {\n        return yLabel;\n      },\n      hideLegend = false\n    } = this.props;\n\n    const { borderRadius = 0 } = style;\n    const config = {\n      width,\n      height\n    };\n\n    let border = 0;\n\n    let max = 0;\n    for (let i = 0; i < data.data.length; i++) {\n      const actual = data.data[i].reduce((pv, cv) => pv + cv, 0);\n      if (actual > max) {\n        max = actual;\n      }\n    }\n\n    if (percentile) {\n      border = 100;\n    } else {\n      border = max;\n    }\n\n    const showLegend = !hideLegend && data.legend && data.legend.length != 0;\n    const stackedBar = showLegend;\n\n    return (\n      <View style={style}>\n        <Svg height={height} width={width}>\n          {this.renderDefs({\n            ...config,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G>\n            {this.renderHorizontalLines({\n              ...config,\n              count: segments,\n              paddingTop,\n              verticalLabelsHeightPercentage\n            })}\n          </G>\n          <G>\n            {withHorizontalLabels\n              ? this.renderHorizontalLabels({\n                  ...config,\n                  count: segments,\n                  data: [0, border],\n                  paddingTop,\n                  paddingRight,\n                  decimalPlaces,\n                  verticalLabelsHeightPercentage,\n                  formatYLabel\n                })\n              : null}\n          </G>\n          <G>\n            {withVerticalLabels\n              ? this.renderVerticalLabels({\n                  ...config,\n                  labels: data.labels,\n                  paddingRight: paddingRight + 28,\n                  stackedBar,\n                  paddingTop,\n                  horizontalOffset: barWidth,\n                  verticalLabelsHeightPercentage\n                })\n              : null}\n          </G>\n          <G>\n            {this.renderBars({\n              ...config,\n              data: data.data,\n              border,\n              colors: this.props.data.barColors,\n              paddingTop,\n              paddingRight: paddingRight + 20,\n              stackedBar,\n              verticalLabelsHeightPercentage\n            })}\n          </G>\n          {showLegend &&\n            this.renderLegend({\n              ...config,\n              legend: data.legend,\n              colors: this.props.data.barColors\n            })}\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default StackedBarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}